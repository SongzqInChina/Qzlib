# bplustree_c.pyi

from typing import Any

class Node:
    def __init__(self, leaf: bool = True) -> None: ...
    def __del__(self) -> None: ...
    def __str__(self) -> str: ...

class SearchResult:
    result: Any
    iserror: bool
    error_messsage: str
    def __init__(self, result: Any, iserror: bool = False, error_message: str = '') -> None: ...

class BplusTree:
    def __init__(self, t: int) -> None: ...  # 添加BplusTree的构造函数

    def split_child(self, x: Node, i: int) -> None: ...
    def insert_non_full(self, x: Node, k: Any, v: Any) -> None: ...
    def merge_children(self, x: Node, i: int) -> None: ...
    def redistribute_key(self, x: Node, i: int) -> None: ...
    def insert(self, k: Any, v: Any) -> None: ...
    def remove(self, k: Any) -> None: ...
    def search(self, k: Any) -> SearchResult: ...
